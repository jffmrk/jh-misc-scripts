#!/usr/bin/env bash

prefix="$1"

usage() {
  cat 1>&2 <<EOF
Usage: $(basename "$0") [OPTIONS] BUCKET PREFIX"

OPTIONS:
  -e | --expires-in   The number of seconds until the links expire
  -h | --help         Show this usage message
  -p | --profile      AWS credentials profile
EOF
}

throw() {
  echo "$@" 1>&2
  echo 1>&2
  usage
  exit 1
}

getopt -T > /dev/null && throw "$(cat <<EOF
GNU getopt required. This system uses legacy getopt.
On OS X, use "brew install gnu-getopt"
EOF
)"

options=$(getopt \
  --options 'e:hp:' \
  --long 'expires-in:,help,profile:' \
  -n "$(basename "$0")" \
  -- "$@" \
)
eval set -- "$options"

while true; do
  case "$1" in
    -e|--expires-in) expires_in="$2"; shift 2 ;;
    -h|--help) usage; exit 0 ;;
    -p|--profile) profile="$2"; shift 2 ;;
    --) shift; break ;;
  esac
done

bucket="$1"
prefix="$2"
url="s3://${bucket}/"
[ -z "$bucket" ] && throw 'BUCKET argument required'

ls_opts=(
  --no-paginate \
  --bucket "$bucket" \
  --query 'Contents[*].[Key]' \
  --output text
)
sign_opts=()

if [ -n "$prefix" ]; then
  ls_opts+=(--prefix "$prefix")
  url+="${prefix}/"
fi

if [ -n "$profile" ]; then
  ls_opts+=(--profile "$profile")
  sign_opts+=(--profile "$profile")
fi

if [ -n "$expires_in" ]; then
  sign_opts+=(--expires-in "$expires_in")
fi

aws s3api list-objects-v2 \
  "${ls_opts[@]}" \
  | tr -s ' ' \
  | cut -d' ' -f4- \
  | tr '\n' '\0' \
  | xargs -0 -i -r \
  aws s3 presign "${sign_opts[@]}" "'$url{}'"
